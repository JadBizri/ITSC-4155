import type { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';

interface SearchRequest {
	zipcode: string;
	category: string;
}
interface Tile {
	listing: {
		conditionText: string;
		listingId: string;
		image: {
			url: string;
		};
		locationName: string;
		price: string;
		title: string;
	};
}
interface ModularFeedResponse {
	modularFeed: {
		looseTiles: Tile[];
	};
}
export const thirdPartyCatergories = async (req: NextApiRequest, res: NextApiResponse) => {
	try {
		const { zipcode, category } = req.body as SearchRequest;
		const pageCursor: string[] = [
			'H4sIAAAAAAAAAH2STYsbMQyG_4vPEfhDtse5LaGFhT0UFnpp9iDbcjKwmQnjpC2E_Pcq2bKwLezBB8uvXkmPdVGdaSn7Z-59nKfHqtaqy11bizqSyVk3zBhSKymWElt2HFlrtVJU-xP10_eRf3F9GvtpnHb3_BZbiKZm8KUSuJgIEjaG5HyzFVvRob3lb-apnw9cv_w-8TLR68MtdJ5Oaq1X6rjwz3E-92-043f7rtY_VPBJmgoRGuMADjEBxRxBs26WoonojRTQxtRIhcGT1yIrFXK1A1gqgXRrHglFZmUc6akAoTHgCkcYLItlTq7ZbAPex_UpRB-wAGsrbsUh5GQIQtCmYXDDUFlkmHjQPmQYmhBwVidIJVjIoUo96cfGm1t1eUjRVSiohVHSGahgBNca50rBF6zqZaUac30-0SJIghYo-_nAt9iGyp4fT3zYnJc-L3dg_7-9s5yXHU1jeRMLw8t1pfp-PB5vUCeB349yZAE-KD5kycdetn-35aFJyla-YqtMNM5p71Cjs1v1clWfOn_mErXHqIfwj8tXmuazjNHotfP1D7d-YZGxAgAA',
			'H4sIAAAAAAAAAH2STWscMQyG_4vPK7D87dzC0kIgh0Kgl24OGlvaHcjOLOPZtrDsf683KYG0kIMPll-9kh7rohrTUg5P3No4Tw9V3anW79oYpyPhMGhxgwtZSo6lRBksR9ZabRTV9kht_T7yL66PY1vHaf-aL1FCxDqAL5XAxkyQnTBk68VUJ0UHecvfzlM7H7l--b3yMtHL_S10nlZ1pzfqtPDPcT63b7Tnd_um7n6o4msVthlCzgjWRQ2pxgAsJhYTCkVJvcCgLTtXEEo1ArZigWwSATr0MTksmGKXOXTGJHZQYuIuG1LvVAvoiDm4Ir3h2mVBoy_BMbC1AaypEQbtPGjRRCEJUri52Wx0QCsg0Q1gE-ZeVHuwVEkHK1TsrTckxpTiAEG7CLZwAULpyGIvYvt0VFE9b5Qw16eVlo7E6w7lMB_5FttSOfDDysfteWnz8grs_7d3lvOyp2ksb-LO8HLdqHYYT6cb1KnDb6d--gJ8UHzI6h972f3dlnvpKbv-FTuFEa1Fg4hG5516vqpPnT9zidp7673-x-UrTfO5jyH00vj6B8mLzPqxAgAA',
			'H4sIAAAAAAAAAH2STWscMQyG_4vPK_DH-Cu3sLQQyKEQ6KWbgyzLuwPZmWU82xaW_e_VJiWQFnLwwfLzStYrXVRnXOjwxL2P8_RQ1Z3qctfWDjqiKUW3oQwhN8qRKLbiOLLWaqOw9kfs6_eRf3F9HPs6TvtXfYstRFMLeKoILmaEPDSG7HyzdWikQ3vTb-epn49cv_xeeZnw5f4WOk-rutMbdVr45zif-zfc83v6ru5-qKHYZjU28CHGW4EGWXuGQI0raUT5tRSoIRjtagLn2INLLkJxEcFnwhDJaulOMBqC9z4QVG2rsMYJVipQLJywxCYRwayPuRSbgF0icNkYSOwNcEqVOOeaXBIsBoNOVwvkjVSOZYCiawMu2pIhNJqCYCklQwUtoHEGnDUkLVAA1wLXWE1gT-p5oxpzfVpxEUsGLaYc5iPfYlukAz-sfNyelz4vr4b9__bu5bzscRrpDRYPL9eN6ofxdLqZOon5_SRHFuAD8UElg73s_m7LfRPJTkaxUyYasSzbaLNPO_V8VZ9m_ixL1D5kk_Q_Wb7iNJ-ljYYvna9_ABQkvGaxAgAA',
			'H4sIAAAAAAAAAH2STWsbMRCG_4vOHtD3h2_BtBDIIRDopc5hJM3YC_GuWe2mBeP_XjkpgbSQgw6S3vcd6Zm5iEY4l-MTtTZM430VW9H6XmptZUCVs2SbrU9cUiglcDYUSEqxEVjbA7blx0C_qD4MbRnGw5ufA_ugagZXKoIJCSFZJkjGsa6Wi_T87t9NY1tPVL_9Xmge8eXudrSOi9jKjTjP9DpMa3vEA33EN7H9KTjpwIU1VBsSmJwTRC0NcAlBFhM5JuoFyHutXHXgkDyYKAmyMhGKixQ8spR4e4fU1kidJQTLFowhA9FxAU3FaaW97-4u8zHpFDSCyqoXJasgpeQgRVV8Uhir1F0WKrta0UJVsYLx0UPKSYKMFNGrToBuRT1Fpx0lCBF7WvQIOfsMir236LVRLonnjWCi-rTg3JEY2aEcpxPdznZYjnS_0Gm3zm2a34D9f_fBcpoPOA7lXdwZXq4b0Y7D-XyDOnb47dxXH4BPik-u3tjL_u-03HG37Hsr9kIFZYzx3oQo4148X8WXyV-lBOmiskb_k_Idx2nt32B8aXT9A26Gky6xAgAA',
			'H4sIAAAAAAAAAH1STWsbMRD9Lzp7QN8fvgXTQiCHQKCXOoeRNLIX4l2zWqcF4__e2aQE0kIOEmhm3ps3b3QVnXAuxyfqfZjG-yq2ovNbam1lQJWzbDZbn1pJoZTQsqFAUoqNwNofsC8_BvpF9WHoyzAe3vAtNB9UzeBKRTAhISTbCJJxTVfbivTtHb-bxn45Uf32e6F5xJe7NXQZF7GVG3Ge6XWYLv0RD_RB38X2p1CoY1aqQtJOg5GUILkYIacYyRiriqncoGjZKiVOIhEYlxTExrKUrtpRsCpGy2W6OG2KsdBYNMvNCjBVCTXznNZaJy2uclsxxfsGHhs3tSYAqiBBe7RSKr7d6kqWiXTSBUK1Fgx6B6iZ3MTSkmEqmdfhSRcdfPbgIq7aWH3UNUFNRVJQTgdnxfNGNKL6tODMlmjJphynE62xHZYj3S902l3mPs1vhv2f-_Bymg84DuW9mD283jaiH4fzeTV1ZPP7mQ9_gE8Vn1C82Ov-72-5awzZ8yr2QgVljFfSWaPUXjzfxJfMX7EE6ZJXwfzD8h3H6cJjNHzpdPsDSGDUprECAAA',
			'H4sIAAAAAAAAAH1Sy27jIBT9F9ZBAi4Pk12UeahSF5UizWbSxQUuiSXHtowzD0X598FJZ9SOqi5YAOfFuVxYIZzicUeltEP_kNialboXSmnhUIYgsg7a-hy9i9HlAORICLZimMqOuo6mTSrb81SGqXLlU9094YFeTm6wz79mmnrsXgO_DsOho09tGTv8vVmkbgHuhEcs87eWflJ6bMvc9odbruyydTIFbmJCDs4j9zoT92CySjpHYfOdvx36cj5Rem08nPuZreWKjRP9aIfzLeU_-cLW35kSGhTEwK2EhgNoxVEb5CEKzJrAe9VUA-WRvIhYYY3h4BvNg_SaNzbLQFpHZ5Z-jLDQpBB5MsZxsCLyxljJiUzKgE1QpJe4kCSCddxGE6saymraABc5RvDWIilZYV7Ut1tXYyVVTSNU06wzRwNGGQo26VRhJFFIZxJXMUsORhNvgCLPRvmgYhIpGfa8Ypko7WaclkqEWLHjcKLlbIvxSA8znf4O6t27e5f1apgO2LfxDq4dXq4rVo7tOC6l9rX8MtZV5_oG8YZVB3vZv_zCTa6UfR3FnkknAayVymoFe_Z8ZR8qf6TihBW1Cfufyhfsh3N9Rsau0PUP1feNMwkDAAA',
		];
		const payloads = {
			operationName: 'GetModularFeed',
			variables: {
				debug: false,
				searchParams: [
					{ key: 'DISTANCE', value: '5' },
					{ key: 'platform', value: 'web_mobile' },
					{ key: 'zipcode', value: zipcode },
					{ key: 'experiment_id', value: 'experimentmodel24' },
					{ key: 'limit', value: '50' },
					{ key: 'searchSessionId', value: '52c93fc1-58fb-4545-83ad-59dd8bb18a62' },
					{ key: 'cid', value: category.toString() }, //all clothing
					{ key: 'page_cursor', value: pageCursor[Math.floor(Math.random() * (pageCursor.length + 1))] },
				],
			},
			query:
				'query GetModularFeed($searchParams: [SearchParam], $debug: Boolean = false) {\n  modularFeed(params: $searchParams, debug: $debug) {\n    analyticsData {\n      requestId\n      searchPerformedEventUniqueId\n      searchSessionId\n      __typename\n    }\n    categoryInfo {\n      categoryId\n      isForcedCategory\n      __typename\n    }\n    feedAdditions\n    filters {\n      ...modularFilterNumericRange\n      ...modularFilterSelectionList\n      __typename\n    }\n    legacyFeedOptions {\n      ...legacyFeedOptionListSelection\n      ...legacyFeedOptionNumericRange\n      __typename\n    }\n    looseTiles {\n      ...modularTileBanner\n      ...modularTileBingAd\n      ...modularTileGoogleDisplayAd\n      ...modularTileJob\n      ...modularTileEmptyState\n      ...modularTileListing\n      ...modularTileLocalDisplayAd\n      ...modularTileSearchAlert\n      ...modularTileSellerAd\n      ...modularModuleTileAdsPostXAd\n      __typename\n    }\n    modules {\n      ...modularGridModule\n      __typename\n    }\n    pageCursor\n    query {\n      ...modularQueryInfo\n      __typename\n    }\n    requestTimeMetadata {\n      resolverComputationTimeSeconds\n      serviceRequestTimeSeconds\n      totalResolverTimeSeconds\n      __typename\n    }\n    searchAlert {\n      alertId\n      alertStatus\n      __typename\n    }\n    debugInformation @include(if: $debug) {\n      rankedListings {\n        listingId\n        attributes {\n          key\n          value\n          __typename\n        }\n        __typename\n      }\n      lastViewedItems {\n        listingId\n        attributes {\n          key\n          value\n          __typename\n        }\n        __typename\n      }\n      categoryAffinities {\n        affinity\n        count\n        decay\n        affinityOwner\n        __typename\n      }\n      rankingStats {\n        key\n        value\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment modularFilterNumericRange on ModularFeedNumericRangeFilter {\n  isExpandedHighlight\n  lowerBound {\n    ...modularFilterNumericRangeBound\n    __typename\n  }\n  shortcutLabel\n  shortcutRank\n  subTitle\n  targetName\n  title\n  type\n  upperBound {\n    ...modularFilterNumericRangeBound\n    __typename\n  }\n  __typename\n}\n\nfragment modularFilterNumericRangeBound on ModularFeedNumericRangeFilterNumericRangeBound {\n  label\n  limit\n  placeholderText\n  targetName\n  value\n  __typename\n}\n\nfragment modularFilterSelectionList on ModularFeedSelectionListFilter {\n  targetName\n  title\n  subTitle\n  shortcutLabel\n  shortcutRank\n  type\n  isExpandedHighlight\n  options {\n    ...modularFilterSelectionListOption\n    __typename\n  }\n  __typename\n}\n\nfragment modularFilterSelectionListOption on ModularFeedSelectionListFilterOption {\n  isDefault\n  isSelected\n  label\n  subLabel\n  value\n  __typename\n}\n\nfragment legacyFeedOptionListSelection on FeedOptionListSelection {\n  label\n  labelShort\n  name\n  options {\n    default\n    label\n    labelShort\n    selected\n    subLabel\n    value\n    __typename\n  }\n  position\n  queryParam\n  type\n  __typename\n}\n\nfragment legacyFeedOptionNumericRange on FeedOptionNumericRange {\n  label\n  labelShort\n  leftQueryParam\n  lowerBound\n  name\n  options {\n    currentValue\n    label\n    textHint\n    __typename\n  }\n  position\n  rightQueryParam\n  type\n  units\n  upperBound\n  __typename\n}\n\nfragment modularTileBanner on ModularFeedTileBanner {\n  tileId\n  tileType\n  title\n  __typename\n}\n\nfragment modularTileBingAd on ModularFeedTileBingAd {\n  tileId\n  bingAd {\n    ouAdId\n    adExperimentId\n    adNetwork\n    adRequestId\n    adTileType\n    adSettings {\n      repeatClickRefractoryPeriodMillis\n      __typename\n    }\n    bingClientId\n    clickFeedbackUrl\n    clickReturnUrl\n    contentUrl\n    deepLinkEnabled\n    experimentDataHash\n    image {\n      height\n      url\n      width\n      __typename\n    }\n    impressionFeedbackUrl\n    impressionUrls\n    viewableImpressionUrls\n    installmentInfo {\n      amount\n      description\n      downPayment\n      __typename\n    }\n    itemName\n    lowPrice\n    price\n    searchId\n    sellerName\n    templateFields {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  tileType\n  __typename\n}\n\nfragment modularTileGoogleDisplayAd on ModularFeedTileGoogleDisplayAd {\n  tileId\n  googleDisplayAd {\n    ouAdId\n    additionalSizes\n    adExperimentId\n    adHeight\n    adNetwork\n    adPage\n    adRequestId\n    adTileType\n    adWidth\n    adaptive\n    channel\n    clickFeedbackUrl\n    clientId\n    contentUrl\n    customTargeting {\n      key\n      values\n      __typename\n    }\n    displayAdType\n    errorDrawable {\n      actionPath\n      listImage {\n        height\n        url\n        width\n        __typename\n      }\n      __typename\n    }\n    experimentDataHash\n    formatIds\n    impressionFeedbackUrl\n    personalizationProperties {\n      key\n      values\n      __typename\n    }\n    prebidConfigs {\n      key\n      values {\n        timeout\n        tamSlotUUID\n        liftoffPlacementIDs\n        __typename\n      }\n      __typename\n    }\n    renderLocation\n    searchId\n    searchQuery\n    templateId\n    __typename\n  }\n  tileType\n  __typename\n}\n\nfragment modularTileJob on ModularFeedTileJob {\n  tileId\n  tileType\n  job {\n    address {\n      city\n      state\n      zipcode\n      __typename\n    }\n    companyName\n    datePosted\n    image {\n      height\n      url\n      width\n      __typename\n    }\n    industry\n    jobId\n    jobListingUrl\n    jobOwnerId\n    pills {\n      text\n      type\n      __typename\n    }\n    title\n    apply {\n      method\n      value\n      __typename\n    }\n    wageDisplayValue\n    provider\n    __typename\n  }\n  __typename\n}\n\nfragment modularTileEmptyState on ModularFeedTileEmptyState {\n  tileId\n  tileType\n  title\n  description\n  iconType\n  __typename\n}\n\nfragment modularTileListing on ModularFeedTileListing {\n  tileId\n  listing {\n    ...modularListing\n    __typename\n  }\n  tileType\n  __typename\n}\n\nfragment modularListing on ModularFeedListing {\n  listingId\n  conditionText\n  flags\n  image {\n    height\n    url\n    width\n    __typename\n  }\n  isFirmPrice\n  locationName\n  price\n  title\n  vehicleMiles\n  __typename\n}\n\nfragment modularTileLocalDisplayAd on ModularFeedTileLocalDisplayAd {\n  tileId\n  localDisplayAd {\n    ouAdId\n    adExperimentId\n    adNetwork\n    adRequestId\n    adTileType\n    advertiserId\n    businessName\n    callToAction\n    callToActionType\n    clickFeedbackUrl\n    contentUrl\n    experimentDataHash\n    headline\n    image {\n      height\n      url\n      width\n      __typename\n    }\n    impressionFeedbackUrl\n    searchId\n    __typename\n  }\n  tileType\n  __typename\n}\n\nfragment modularTileSearchAlert on ModularFeedTileSearchAlert {\n  tileId\n  tileType\n  title\n  __typename\n}\n\nfragment modularTileSellerAd on ModularFeedTileSellerAd {\n  tileId\n  listing {\n    ...modularListing\n    __typename\n  }\n  sellerAd {\n    ouAdId\n    adId\n    adExperimentId\n    adNetwork\n    adRequestId\n    adTileType\n    clickFeedbackUrl\n    experimentDataHash\n    impressionFeedbackUrl\n    searchId\n    __typename\n  }\n  tileType\n  __typename\n}\n\nfragment modularModuleTileAdsPostXAd on ModularFeedTileAdsPostXAd {\n  ...modularTileAdsPostXAd\n  moduleId\n  moduleRank\n  moduleType\n  __typename\n}\n\nfragment modularTileAdsPostXAd on ModularFeedTileAdsPostXAd {\n  tileId\n  adsPostXAd {\n    ouAdId\n    adExperimentId\n    adNetwork\n    adRequestId\n    adTileType\n    clickFeedbackUrl\n    experimentDataHash\n    impressionFeedbackUrl\n    searchId\n    offer {\n      beacons {\n        noThanksClick\n        close\n        __typename\n      }\n      title\n      description\n      clickUrl\n      image\n      pixel\n      ctaYes\n      ctaNo\n      __typename\n    }\n    __typename\n  }\n  tileType\n  __typename\n}\n\nfragment modularGridModule on ModularFeedModuleGrid {\n  moduleId\n  collection\n  formFactor\n  grid {\n    actionPath\n    tiles {\n      ...modularModuleTileBingAd\n      ...modularModuleTileGoogleDisplayAd\n      ...modularModuleTileListing\n      ...modularModuleTileLocalDisplayAd\n      ...modularModuleTileSellerAd\n      __typename\n    }\n    __typename\n  }\n  moduleType\n  rank\n  rowIndex\n  searchId\n  subTitle\n  title\n  infoActionPath\n  __typename\n}\n\nfragment modularModuleTileBingAd on ModularFeedTileBingAd {\n  ...modularTileBingAd\n  moduleId\n  moduleRank\n  moduleType\n  __typename\n}\n\nfragment modularModuleTileGoogleDisplayAd on ModularFeedTileGoogleDisplayAd {\n  ...modularTileGoogleDisplayAd\n  moduleId\n  moduleRank\n  moduleType\n  __typename\n}\n\nfragment modularModuleTileListing on ModularFeedTileListing {\n  ...modularTileListing\n  moduleId\n  moduleRank\n  moduleType\n  __typename\n}\n\nfragment modularModuleTileLocalDisplayAd on ModularFeedTileLocalDisplayAd {\n  ...modularTileLocalDisplayAd\n  moduleId\n  moduleRank\n  moduleType\n  __typename\n}\n\nfragment modularModuleTileSellerAd on ModularFeedTileSellerAd {\n  ...modularTileSellerAd\n  moduleId\n  moduleRank\n  moduleType\n  __typename\n}\n\nfragment modularQueryInfo on ModularFeedQueryInfo {\n  appliedQuery\n  decisionType\n  originalQuery\n  suggestedQuery\n  __typename\n}\n',
		};
		const response = await axios.post('https://offerup.com/api/graphql', payloads);
		res.status(200).json(response.data);
	} catch (error) {
		console.error(error);
		res.status(500).json({ error: 'Failed to fetch data from the external API' });
	}
};

export default thirdPartyCatergories;
